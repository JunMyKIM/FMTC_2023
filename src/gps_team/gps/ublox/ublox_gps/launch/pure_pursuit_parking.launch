<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <arg name="path" />
  <arg name="ld" default="4"/>
  <arg name="vel" default="5"/>
  <arg name="final_constant" default="1.0" />
  <arg name="obs_order" default="1" />
  <arg name="pk" default="1"/>

  <!-- gps node-->
  <arg name="node_name" default="gps_front"/>
  <arg name="param_file_name" doc="name of param file, e.g. rover" default="nmea1"/>
  <arg name="output" default="screen" />
  <arg name="respawn" default="true" />
  <arg name="respawn_delay" default="30" />
  <arg name="clear_params" default="true" />


  <node pkg="ublox_gps" type="ublox_gps" name="$(arg node_name)"
        output="$(arg output)"
        clear_params="$(arg clear_params)"
        respawn="$(arg respawn)"
        respawn_delay="$(arg respawn_delay)">
    <rosparam command="load" file="$(find ublox_gps)/config/$(arg param_file_name).yaml" />
  </node>

  <!-- gps velocity-->
  <node pkg="pure_pursuit" type="gps_velocity.py" name="gps_velocity"/>

  <!-- gps yaw-->
  <node pkg="pure_pursuit" type="gps_yaw.py" name="gps_yaw"/>


  
  <!-- lidar(obstacle) -->
  <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" />
  <node pkg="lidar_team_erp42" type="large_static_obstacle" name="large_static_obstacle" />
  <node pkg="lidar_team_erp42" type="dynamic_obstacle" name="dynamic_obstacle" />
  <node pkg="lidar_team_erp42" type="delivery" name="delivery" />
  <node pkg="lidar_team_erp42" type="parallel_parking" name="parking_rubbercone_detector" />


  <!-- for pure pursuit -->
  <node pkg="pure_pursuit" type="pure_pursuit2" name="pure_pursuit2" output="screen" args="$(arg path) $(arg pk)" />
  <node pkg="pure_pursuit" type="coordinate2pos" name="coordinate2pos" />
  <node pkg="utmk_coordinate" type="wgs84_to_utmk.py" name="wgs84_to_utmk" />
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find lidar_team_erp42)/rviz/static_obstacle.rviz" />

<!-- for serial control -->
  <node pkg="race" type="serial_control_node" name="serial_control_node" />

  
</launch>

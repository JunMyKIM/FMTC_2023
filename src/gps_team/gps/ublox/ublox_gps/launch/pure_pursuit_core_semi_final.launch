<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <arg name="path" />
  <arg name="ld" default="4"/>
  <arg name="vel" default="5"/>
  <arg name="final_constant" default="1.25" />
  <arg name="obs_order" default="1" />
  <arg name="pk" default="1" />
  <arg name="lr" default="0" />

  <!-- gps node-->
  <arg name="node_name" default="gps_front"/>
  <arg name="param_file_name" doc="name of param file, e.g. rover" default="nmea1"/>
  <arg name="output" default="screen" />
  <arg name="respawn" default="true" />
  <arg name="respawn_delay" default="30" />
  <arg name="clear_params" default="true" />


  <node pkg="ublox_gps" type="ublox_gps" name="$(arg node_name)"
        output="$(arg output)"
        clear_params="$(arg clear_params)"
        respawn="$(arg respawn)"
        respawn_delay="$(arg respawn_delay)">
    <rosparam command="load" file="$(find ublox_gps)/config/$(arg param_file_name).yaml" />
  </node>

  <!-- usb_cam node-->
  <!-- <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="framerate" value="25"/>
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node> -->

  <!-- lanenet -->
  <include file="$(find lane_pkg)/src/launch/lane_detection.launch" />

  <!-- for pure pursuit -->
  <node pkg="pure_pursuit" type="pure_pursuit2" name="pure_pursuit2" output="screen" args="$(arg path) $(arg lr) $(arg pk)" />
  <node pkg="pure_pursuit" type="coordinate2pos" name="coordinate2pos" />
  <node pkg="utmk_coordinate" type="wgs84_to_utmk.py" name="wgs84_to_utmk" />

  <!-- lidar(obstacle) -->
  <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" />
  <node pkg="lidar_team_erp42" type="U_TURN" name="U_TURN" />
  <node pkg="lidar_team_erp42" type="dynamic_obstacle" name="dynamic_obstacle" />
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find lidar_team_erp42)/rviz/static_obstacle.rviz" />
  
  <!--tunnel mission launch-->
  
  <!-- LiDAR for tunnel -->
    <node pkg="object_detector" type="object_detector" name="object_detector"/>
    
     <!-- imu a9 -->
    <arg name="imu_type" default="a9" doc="imu_type [a9, b9, b6]"/>

    <!-- imu serial -->
    <node pkg="handsfree_ros_imu" type="hfi_$(arg imu_type)_ros.py" name="imu" output="screen">
        <param name="port"               type = "str"    value="/dev/HFRobotIMU"/>
        <!-- a9，True， False-->
        <param name="gra_normalization"  type = "bool"   value="True" if="$(eval imu_type == 'a9')"/>
    </node>

    <node pkg="pure_pursuit" type="get_imu" name="get_imu"/>
    

    
  <!-- VISUALIZAITON for tunnel -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find lidar_team_erp42)/rviz/track_waypoint.rviz" />-->
  <!-- lanenet -->
  <!--include file="$(find lane_pkg)/src/launch/lane_detection.launch" -->

    

  
  
  

  <!-- for serial control -->
  <node pkg="race" type="serial_control_node" name="serial_control_node" />

  <!-- for get gps velocity -->
  <node pkg="pure_pursuit" type="gps_velocity.py" name="gps_velocity" />  


  <!-- for get encoder velocity -->
  <node pkg="pure_pursuit" type="encoder_value" name="encoder_value" />  


  

</launch>
